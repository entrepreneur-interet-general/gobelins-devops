# file: roles/webtier/tasks/nginx.yml
- name: Install nginx
  tags: nginx
  yum: name=nginx state=installed
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

- name: Make sure apache related packages are removed
  tags: nginx
  apt: name= "{{ packages }}" state=absent purge=yes
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
  vars:
    packages:
      - apache2
      - apache2-utils

- name: Install nginx
  tags: nginx
  apt: name=nginx state=installed
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Make sure nginx user exists
  tags: nginx
  user:
    name: nginx
    comment: nginx user
    createhome: false
    generate_ssh_key: false
    shell: /bin/false
    system: yes
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Create cache directory
  tags: nginx
  file: path=/var/cache/nginx/gobelinsimg state=directory owner=nginx group=nginx mode=0775

- name: Make sure nginx is running and is started on boot
  tags: nginx
  service: name=nginx state=started enabled=yes

- name: Make sure nginx is configured
  tags: nginx
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify:
    - Restart nginx

- name: Copy HTTP auth credentials
  tags: nginx
  template: src=htpasswd.j2 dest=/etc/nginx/.htpasswd
  notify:
    - Restart nginx

- name: Make sure nginx virtual hosts are configured
  tags: nginx
  template: src=nginx-virtualhost.conf.j2 dest=/etc/nginx/conf.d/{{ item.key }}.conf
  with_dict: "{{ virtualhosts }}"
  when: enable_ssl|default(false)|bool == false
  notify:
    - Restart nginx

- name: Make sure SSL nginx virtual hosts are configured
  tags: nginx
  template: src=nginx-ssl-virtualhost.conf.j2 dest=/etc/nginx/conf.d/{{ item.key }}.conf
  with_dict: "{{ virtualhosts }}"
  when: enable_ssl|default(false)|bool == true

  notify:
    - Restart nginx

- name: Create public directory
  tags: nginx
  file: path=/var/www/{{ item.key }}/public state=directory owner=nginx group=nginx mode=0775
  with_dict: "{{ virtualhosts }}"
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

- name: Create public directory
  tags: nginx
  file: path=/var/www/{{ item.key }}/public state=directory owner=www-data group=www-data mode=0775
  with_dict: "{{ virtualhosts }}"
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

#- name: Adding user {{ ansible_ssh_user }} to nginx group
#  user:
#    name: "{{ ansible_ssh_user }}"
#    group: nginx
#    append: yes
#  become: yes
